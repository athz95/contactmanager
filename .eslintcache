[{"C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\reportWebVitals.js":"1","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\App.js":"2","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\context.js":"3","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\contacts\\Contacts.js":"4","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\layout\\Header.js":"5","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\contacts\\Contact.js":"6","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\contacts\\AddContact.js":"7","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\layout\\TextInputGroup.js":"8","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\pages\\About.js":"9","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\pages\\NotFound.js":"10","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\test\\test.js":"11","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\contacts\\EditContact.js":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":1420,"mtime":1606855039921,"results":"15","hashOfConfig":"14"},{"size":1513,"mtime":1606854839528,"results":"16","hashOfConfig":"14"},{"size":890,"mtime":1606749436783,"results":"17","hashOfConfig":"14"},{"size":1205,"mtime":1606749731670,"results":"18","hashOfConfig":"14"},{"size":2437,"mtime":1606853703625,"results":"19","hashOfConfig":"14"},{"size":3373,"mtime":1606852809452,"results":"20","hashOfConfig":"14"},{"size":1505,"mtime":1606747827838,"results":"21","hashOfConfig":"14"},{"size":314,"mtime":1606749928621,"results":"22","hashOfConfig":"14"},{"size":294,"mtime":1606845344762,"results":"23","hashOfConfig":"14"},{"size":747,"mtime":1606850090794,"results":"24","hashOfConfig":"14"},{"size":3777,"mtime":1606854330304,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bgqirh",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\reportWebVitals.js",[],"C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\App.js",[],"C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\context.js",[],"C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\contacts\\Contacts.js",[],"C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\layout\\Header.js",[],"C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\contacts\\Contact.js",["53"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Contact extends Component {\r\n   state = {\r\n       showContactInfo: true\r\n   };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n      const res =  await axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({\r\n        type: 'DELETE_CONTACT', payload: id })\r\n   };\r\n\r\n    onShowClick= e => {\r\n        this.setState({ showContactInfo: \r\n            !this.state.showContactInfo });\r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n             {value => {\r\n\r\n                 const { dispatch } = value;\r\n                 return (\r\n                    <div className=\"card card-body mb-3\">\r\n                <h4>\r\n                    {name}{'  '}\r\n                 <i onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\" \r\n                  style={{ cursor: 'pointer' }}\r\n                  />\r\n                  <i className=\"fas fa-times\"\r\n                   style={{ \r\n                   cursor: 'pointer', \r\n                   float: 'right', \r\n                   color: 'red' }} \r\n\r\n                   onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                   />\r\n                   <Link to={`contact/edit/${id}`} >\r\n                       <i \r\n                       className=\"fas fa-pencil-alt\"\r\n                       style={{\r\n                           cursor: 'pointer',\r\n                           float: 'right',\r\n                           color: 'black',\r\n                           marginRight: '1rem'\r\n                       }}\r\n                       />\r\n                   </Link>\r\n                </h4>\r\n                {showContactInfo ? (<ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email} </li>\r\n                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>) : null }\r\n                \r\n            </div>\r\n                 )\r\n                   }}\r\n            </Consumer>\r\n\r\n            );\r\n        }\r\n        }\r\n\r\n\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n  \r\n    \r\n}\r\n\r\nexport default Contact;","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\contacts\\AddContact.js",["54"],"C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\layout\\TextInputGroup.js",["55"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nfunction TextInputGroup({ \r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n    \r\n}) {\r\n    return (\r\n            <div className=\"form-group\">\r\n                           <label htmlFor={name}> {label} </label>\r\n                           <input \r\n                           type={type}\r\n                           name={name} \r\n                           value={value}\r\n                           onChange={onChange}\r\n                           className=\r\n                           {classnames('form-control form-control-lg',\r\n                           {\r\n                               'is-invalid': error \r\n                           })}\r\n                           placeholder={placeholder}\r\n                           />\r\n                          {error && <div className=\"invalid-feedback\">\r\n                               {error}\r\n                           </div>} \r\n                           \r\n                       </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.PropTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\n\r\nexport default TextInputGroup;","C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\pages\\About.js",[],"C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\pages\\NotFound.js",[],"C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\test\\test.js",[],"C:\\Users\\akhta\\Documents\\react-projects\\contactmanager\\src\\components\\contacts\\EditContact.js",["56"],"import React, { Component } from 'react'\r\nimport { Consumer } from \"../../context\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors:{}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get\r\n        (`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone} = this.state;\r\n\r\n        //Check for Errors\r\n        if(name === '') {\r\n            this.setState({errors: { name: 'Name is required'\r\n            }});\r\n            return;\r\n        }\r\n\r\n        if(email === '') {\r\n            this.setState({errors: { email: 'Email is required'\r\n            }})\r\n            return;\r\n        }\r\n\r\n        if(phone === '') {\r\n            this.setState({errors: { phone: 'Phone is required'\r\n            }})\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({\r\n            type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n    \r\n        //Clear state\r\n        this.setState({\r\n            name: '',\r\n            email:'',\r\n            phone:'',\r\n            errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n    };\r\n\r\n\r\n\r\n    handleChange = e => this.setState({ [e.target.name]: \r\n        e.target.value });\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n        \r\n        return (\r\n            <Consumer>\r\n              {value => {\r\n                  const { dispatch } = value;\r\n                  return(\r\n                    <div className=\"card mb-3\">\r\n                <div className=\"card-header\">\r\n                   Edit Contact\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                   <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                      <TextInputGroup \r\n                       label=\"Name\"\r\n                       name=\"name\"\r\n                       placeholder=\"Enter Name\"\r\n                       value={name}\r\n                       onChange={this.handleChange}\r\n                       error={errors.name}\r\n                       \r\n                      />\r\n\r\n                    <TextInputGroup \r\n                       label=\"Email\"\r\n                       name=\"email\"\r\n                       type=\"type\"\r\n                       placeholder=\"Enter Email\"\r\n                       value={email}\r\n                       onChange={this.handleChange}\r\n                       error={errors.email}\r\n                      />\r\n\r\n                    <TextInputGroup \r\n                       label=\"Phone\"\r\n                       name=\"phone\"\r\n                       placeholder=\"Enter Phone\"\r\n                       value={phone}\r\n                       onChange={this.handleChange}\r\n                       error={errors.phone}\r\n                      />\r\n\r\n                       <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-dark btn-block\" />\r\n                   </form>\r\n                </div>\r\n            </div>\r\n                  )\r\n              }}\r\n\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default EditContact;",{"ruleId":"57","severity":1,"message":"58","line":14,"column":13,"nodeType":"59","messageId":"60","endLine":14,"endColumn":16},{"ruleId":"57","severity":1,"message":"61","line":3,"column":16,"nodeType":"59","messageId":"60","endLine":3,"endColumn":22},{"ruleId":"62","severity":2,"message":"63","line":39,"column":16,"nodeType":"59","endLine":39,"endColumn":25},{"ruleId":"57","severity":1,"message":"61","line":3,"column":16,"nodeType":"59","messageId":"60","endLine":3,"endColumn":22},"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'uuidv4' is defined but never used.","react/no-typos","Typo in static class property declaration"]