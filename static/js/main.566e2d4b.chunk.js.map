{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/test.js","components/contacts/EditContact.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","onShowClick","e","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","preventDefault","newContact","post","history","push","handleChange","target","About","NotFound","test","title","body","fetch","then","response","json","EditContact","updContact","match","params","put","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACpB,OAAOA,EAAOC,MACZ,IAAK,iBACD,OAAO,2BACAF,GADP,IAEIG,SAAUH,EAAMG,SAASC,QAAO,SAAAC,GAAO,OACvCA,EAAQC,KAAOL,EAAOM,aAE1B,IAAK,cACH,OAAO,2BACAP,GADP,IAEGG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAGvC,IAAK,iBACL,OAAO,2BACAH,GADP,IAEGG,SAAUH,EAAMG,SAASK,KACxB,SAAAH,GAAO,OACNA,EAAQC,KAAOL,EAAOM,QAAQD,GAC7BD,EAAUJ,EAAOM,QAAWF,OAGpC,QACI,OAAOL,IAIRS,EAAb,4MACIT,MAAQ,CACJG,SAAU,GAGTO,SAAU,SAAAT,GAAM,OACZ,EAAKU,UAAS,SAAAX,GAAK,OAAID,EAAQC,EAAOC,QANnD,kMAUyBW,IACjBC,IAAI,8CAXZ,OAUaC,EAVb,OAYOC,KAAKJ,SAAS,CAAER,SAAUW,EAAIE,OAZrC,qIAkBQ,OACI,cAACpB,EAAQa,SAAT,CAAkBQ,MAAOF,KAAKf,MAA9B,SACKe,KAAKG,MAAMC,eApB5B,GAA8BC,aA2BjBC,EAAWzB,EAAQyB,SCwBjBC,E,4MA5EZtB,MAAQ,CACJuB,iBAAiB,G,EAGpBC,c,uCAAgB,WAAOlB,EAAII,GAAX,SAAAe,EAAA,sEACKb,IAClBc,OADkB,qDACmCpB,IAFxC,cAIdI,EAAS,CACPR,KAAM,iBAAkBK,QAASD,IALrB,2C,0DAQhBqB,YAAa,SAAAC,GACT,EAAKjB,SAAS,CAAEY,iBACX,EAAKvB,MAAMuB,mB,uDAGV,IAAD,SAC8BR,KAAKG,MAAMb,QAAtCC,EADH,EACGA,GAAIuB,EADP,EACOA,KAAMC,EADb,EACaA,MAAOC,EADpB,EACoBA,MACjBR,EAAoBR,KAAKf,MAAzBuB,gBAER,OACI,cAACF,EAAD,UACE,SAAAJ,GAAU,IAECP,EAAaO,EAAbP,SACR,OACG,sBAAKsB,UAAU,sBAAf,UACJ,+BACKH,EAAM,KACV,mBAAGI,QAAS,EAAKN,YAChBK,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAEjB,mBAAGH,UAAU,eACZE,MAAO,CACPC,OAAQ,UACRC,MAAO,QACPC,MAAO,OAEPJ,QAAS,EAAKT,cAAcc,KAAK,EAAMhC,EAAII,KAE3C,cAAC,IAAD,CAAM6B,GAAE,uBAAkBjC,GAA1B,SACI,mBACA0B,UAAU,oBACVE,MAAO,CACHC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPG,YAAa,eAKvBjB,EAAmB,qBAAIS,UAAU,aAAd,UAChB,qBAAIA,UAAU,kBAAd,oBAAwCF,EAAxC,OACA,qBAAIE,UAAU,kBAAd,oBAAwCD,QACnC,e,GA1DHX,aCwBPqB,E,uKAxBR,OACI,cAACpB,EAAD,UACE,SAAAJ,GAAU,IACCd,EAAac,EAAbd,SACR,OACI,eAAC,IAAMuC,SAAP,WACI,qBAAIV,UAAU,iBAAd,UACA,sBAAMA,UAAU,cAAhB,uBADA,WAGH7B,EAASK,KAAI,SAAAH,GAAO,OAClB,cAAC,EAAD,CAEEA,QAASA,GADJA,EAAQC,iB,GAdfc,aCAjBuB,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACI,qBAAKZ,UAAU,6DAAf,SAEA,sBAAKA,UAAU,YAAf,UACC,mBAAGa,KAAK,IAAIb,UAAU,eAAtB,SACKY,IAEL,8BACE,qBAAIZ,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACD,eAAC,IAAD,CAAMO,GAAG,IAAIP,UAAU,WAAvB,UACI,mBAAGA,UAAU,gBADjB,aAIF,6BACA,eAAC,IAAD,CAAMO,GAAG,eAAeP,UAAU,WAAlC,UACG,mBAAGA,UAAU,gBADhB,YAIA,6BACA,eAAC,IAAD,CAAMO,GAAG,SAASP,UAAU,WAA5B,UACG,mBAAGA,UAAU,oBADhB,yBAYZW,EAAOG,aAAe,CAClBF,SAAU,UAOCD,Q,yBCQAI,MAhDf,YASI,IARAC,EAQD,EARCA,MACAnB,EAOD,EAPCA,KACAZ,EAMD,EANCA,MACAgC,EAKD,EALCA,YACA/C,EAID,EAJCA,KACAgD,EAGD,EAHCA,SACAC,EAED,EAFCA,MAGA,OACQ,sBAAKnB,UAAU,aAAf,UACe,wBAAOoB,QAASvB,EAAhB,cAAwBmB,EAAxB,OACA,uBACA9C,KAAMA,EACN2B,KAAMA,EACNZ,MAAOA,EACPiC,SAAUA,EACVlB,UACCqB,IAAW,+BACZ,CACI,aAAcF,IAElBF,YAAaA,IAEbE,GAAS,qBAAKnB,UAAU,mBAAf,SACJmB,QC6FjBG,E,4MArHXtD,MAAQ,CACJ6B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPwB,OAAO,I,EAGXC,S,uCAAW,WAAO9C,EAAUkB,GAAjB,yBAAAH,EAAA,yDACPG,EAAE6B,iBADK,EAGuB,EAAKzD,MAA3B6B,EAHD,EAGCA,KAAMC,EAHP,EAGOA,MAAOC,EAHd,EAGcA,MAGT,KAATF,EANI,uBAOH,EAAKlB,SAAS,CAAC4C,OAAQ,CAAE1B,KAAM,sBAP5B,6BAYM,KAAVC,EAZI,uBAaH,EAAKnB,SAAS,CAAC4C,OAAQ,CAAEzB,MAAO,uBAb7B,6BAkBM,KAAVC,EAlBI,wBAmBH,EAAKpB,SAAS,CAAC4C,OAAQ,CAAExB,MAAO,uBAnB7B,kCAwBD2B,EAAa,CACf7B,OACAC,QACAC,SA3BG,UA8BWnB,IACjB+C,KAAK,6CAA6CD,GA/B5C,QA8BD5C,EA9BC,OAiCPJ,EACK,CAACR,KAAM,cAAeK,QAASO,EAAIE,OAMxC,EAAKL,SAAS,CACVkB,KAAM,GACNC,MAAM,GACNC,MAAM,GACNwB,OAAQ,KAEZ,EAAKrC,MAAM0C,QAAQC,KAAK,KA9CjB,4C,0DAkDXC,aAAe,SAAAlC,GAAC,OAAI,EAAKjB,SAAL,eAAiBiB,EAAEmC,OAAOlC,KAC1CD,EAAEmC,OAAO9C,S,uDAEH,IAAD,SACgCF,KAAKf,MAAnC6B,EADF,EACEA,KAAMC,EADR,EACQA,MAAOC,EADf,EACeA,MAAOwB,EADtB,EACsBA,OAE3B,OACI,cAAClC,EAAD,UACG,SAAAJ,GAAU,IACCP,EAAaO,EAAbP,SACR,OACE,sBAAKsB,UAAU,YAAf,UACJ,qBAAKA,UAAU,cAAf,yBAIA,qBAAKA,UAAU,YAAf,SACG,uBAAMwB,SAAU,EAAKA,SAASlB,KAAK,EAAM5B,GAAzC,UACG,cAAC,EAAD,CACCsC,MAAM,OACNnB,KAAK,OACLoB,YAAY,aACZhC,MAAOY,EACPqB,SAAU,EAAKY,aACfX,MAAOI,EAAO1B,OAIjB,cAAC,EAAD,CACGmB,MAAM,QACNnB,KAAK,QACL3B,KAAK,OACL+C,YAAY,cACZhC,MAAOa,EACPoB,SAAU,EAAKY,aACfX,MAAOI,EAAOzB,QAGjB,cAAC,EAAD,CACGkB,MAAM,QACNnB,KAAK,QACLoB,YAAY,cACZhC,MAAOc,EACPmB,SAAU,EAAKY,aACfX,MAAOI,EAAOxB,QAGd,uBAAO7B,KAAK,SAASe,MAAM,cAAce,UAAU,0C,GAzGjDZ,aCJV,SAAS4C,IACpB,OACI,gCACI,oBAAIhC,UAAU,YAAd,oCACA,mBAAGA,UAAU,OAAb,2CACA,mBAAGA,UAAU,iBAAb,8BCLG,SAASiC,IACpB,OACI,gCACI,qBAAIjC,UAAU,YAAd,UAA0B,sBAAMA,UAAU,cAAhB,kBAA1B,sBACA,mBAAGA,UAAU,OAAb,iD,IC8BGkC,E,4MAjCXlE,MAAQ,CACJmE,MAAO,GACPC,KAAM,I,kEAGW,IAAD,OAChBC,MAAM,gDACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAtD,GAAI,OAAI,EAAKL,SAAS,CACxBwD,MAAOnD,EAAKmD,MACZC,KAAMpD,EAAKoD,Y,+BAUT,IAAD,EAEmBrD,KAAKf,MAArBmE,EAFH,EAEGA,MAAOC,EAFV,EAEUA,KACf,OAEI,gCACI,mCAAMD,EAAN,OACC,kCAAKC,EAAL,c,GA5BEhD,aCwIJqD,E,4MAnIXzE,MAAQ,CACJ6B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPwB,OAAO,I,EAiBXC,S,uCAAW,WAAO9C,EAAUkB,GAAjB,2BAAAH,EAAA,yDACPG,EAAE6B,iBADK,EAGuB,EAAKzD,MAA3B6B,EAHD,EAGCA,KAAMC,EAHP,EAGOA,MAAOC,EAHd,EAGcA,MAGT,KAATF,EANI,uBAOH,EAAKlB,SAAS,CAAC4C,OAAQ,CAAE1B,KAAM,sBAP5B,6BAYM,KAAVC,EAZI,uBAaH,EAAKnB,SAAS,CAAC4C,OAAQ,CAAEzB,MAAO,uBAb7B,6BAkBM,KAAVC,EAlBI,wBAmBH,EAAKpB,SAAS,CAAC4C,OAAQ,CAAExB,MAAO,uBAnB7B,kCAwBD2C,EAAa,CACf7C,OACAC,QACAC,SAGIzB,EAAO,EAAKY,MAAMyD,MAAMC,OAAxBtE,GA9BD,UAgCWM,IAAMiE,IAAN,qDAAwDvE,GAAMoE,GAhCzE,QAgCD5D,EAhCC,OAkCPJ,EAAS,CACLR,KAAM,iBAAkBK,QAASO,EAAIE,OAIzC,EAAKL,SAAS,CACVkB,KAAM,GACNC,MAAM,GACNC,MAAM,GACNwB,OAAQ,KAEZ,EAAKrC,MAAM0C,QAAQC,KAAK,KA7CjB,4C,0DAkDXC,aAAe,SAAAlC,GAAC,OAAI,EAAKjB,SAAL,eAAiBiB,EAAEmC,OAAOlC,KAC1CD,EAAEmC,OAAO9C,S,6LAhEDX,EAAOS,KAAKG,MAAMyD,MAAMC,OAAxBtE,G,SACUM,IAAMC,IAAN,qDAC6BP,I,OADzCQ,E,OAGAT,EAAUS,EAAIE,KAEpBD,KAAKJ,SAAS,CACVkB,KAAMxB,EAAQwB,KACdC,MAAOzB,EAAQyB,MACfC,MAAO1B,EAAQ0B,Q,qIAyDb,IAAD,SACgChB,KAAKf,MAAnC6B,EADF,EACEA,KAAMC,EADR,EACQA,MAAOC,EADf,EACeA,MAAOwB,EADtB,EACsBA,OAE3B,OACI,cAAClC,EAAD,UACG,SAAAJ,GAAU,IACCP,EAAaO,EAAbP,SACR,OACE,sBAAKsB,UAAU,YAAf,UACJ,qBAAKA,UAAU,cAAf,0BAIA,qBAAKA,UAAU,YAAf,SACG,uBAAMwB,SAAU,EAAKA,SAASlB,KAAK,EAAM5B,GAAzC,UACG,cAAC,EAAD,CACCsC,MAAM,OACNnB,KAAK,OACLoB,YAAY,aACZhC,MAAOY,EACPqB,SAAU,EAAKY,aACfX,MAAOI,EAAO1B,OAIjB,cAAC,EAAD,CACGmB,MAAM,QACNnB,KAAK,QACL3B,KAAK,OACL+C,YAAY,cACZhC,MAAOa,EACPoB,SAAU,EAAKY,aACfX,MAAOI,EAAOzB,QAGjB,cAAC,EAAD,CACGkB,MAAM,QACNnB,KAAK,QACLoB,YAAY,cACZhC,MAAOc,EACPmB,SAAU,EAAKY,aACfX,MAAOI,EAAOxB,QAGd,uBAAO7B,KAAK,SAASe,MAAM,iBAAiBe,UAAU,0C,GAvHnDZ,aCqCX0D,G,6KA5BX,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UACA,sBAAK9C,UAAU,MAAf,UACE,cAAC,EAAD,CAAQY,SAAS,oBACjB,qBAAKZ,UAAU,YAAf,SACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,IAAIC,UAAWxC,IAEjC,cAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,SAASC,UAAWjB,IAEpC,cAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,eAAeC,UAAW3B,IAE5C,cAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,oBAAoBC,UAAWR,IAEjD,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,QAAQC,UAAWf,IAErC,cAAC,IAAD,CAAOe,UAAWhB,oB,GAnBd7C,cCDH8D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.566e2d4b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\"\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n      case 'DELETE_CONTACT':\r\n          return {\r\n              ...state,\r\n              contacts: state.contacts.filter(contact => \r\n              contact.id !== action.payload)\r\n          };\r\n          case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n               contacts: [action.payload, ...state.contacts]\r\n            };\r\n            \r\n            case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n               contacts: state.contacts.map\r\n               (contact =>\r\n                 contact.id === action.payload.id ? \r\n                 (contact = action.payload) : contact)\r\n            };\r\n\r\n          default:\r\n              return state;\r\n    }\r\n} \r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n           \r\n         ],\r\n         dispatch: action => \r\n             this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n       const res = await axios\r\n       .get('https://jsonplaceholder.typicode.com/users');\r\n       this.setState({ contacts: res.data});\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Contact extends Component {\r\n   state = {\r\n       showContactInfo: true\r\n   };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n      const res =  await axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({\r\n        type: 'DELETE_CONTACT', payload: id })\r\n   };\r\n\r\n    onShowClick= e => {\r\n        this.setState({ showContactInfo: \r\n            !this.state.showContactInfo });\r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n             {value => {\r\n\r\n                 const { dispatch } = value;\r\n                 return (\r\n                    <div className=\"card card-body mb-3\">\r\n                <h4>\r\n                    {name}{'  '}\r\n                 <i onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\" \r\n                  style={{ cursor: 'pointer' }}\r\n                  />\r\n                  <i className=\"fas fa-times\"\r\n                   style={{ \r\n                   cursor: 'pointer', \r\n                   float: 'right', \r\n                   color: 'red' }} \r\n\r\n                   onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                   />\r\n                   <Link to={`contact/edit/${id}`} >\r\n                       <i \r\n                       className=\"fas fa-pencil-alt\"\r\n                       style={{\r\n                           cursor: 'pointer',\r\n                           float: 'right',\r\n                           color: 'black',\r\n                           marginRight: '1rem'\r\n                       }}\r\n                       />\r\n                   </Link>\r\n                </h4>\r\n                {showContactInfo ? (<ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email} </li>\r\n                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>) : null }\r\n                \r\n            </div>\r\n                 )\r\n                   }}\r\n            </Consumer>\r\n\r\n            );\r\n        }\r\n        }\r\n\r\n\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n  \r\n    \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n \r\n    render() {\r\n       return(\r\n           <Consumer>\r\n            {value => {\r\n                const { contacts } = value;\r\n                return (\r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                        <span className=\"text-danger\"> Contact </span>\r\n                        List </h1>\r\n                    {contacts.map(contact => (\r\n                       <Contact \r\n                         key={contact.id}\r\n                         contact={contact}         \r\n                        />\r\n                    ))}\r\n                </React.Fragment>\r\n                )\r\n            }}\r\n\r\n           </Consumer>\r\n       )\r\n    }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = ({ branding }) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm \r\n        navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n         <a href=\"/\" className=\"navbar-brand\">\r\n             {branding}\r\n         </a>\r\n         <div>\r\n           <ul className=\"navbar-nav mr-auto\">\r\n               <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                  <i className=\"fas fa-home\"></i> Home\r\n               </Link>\r\n            </li>\r\n            <li>\r\n            <Link to=\"/contact/add\" className=\"nav-link\">\r\n               <i className=\"fas fa-plus\"></i> Add\r\n               </Link>\r\n            </li>\r\n            <li>\r\n            <Link to=\"/about\" className=\"nav-link\">\r\n               <i className=\"fas fa-question\"></i> About\r\n               </Link>\r\n            </li>\r\n           </ul>\r\n         </div>\r\n        </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nfunction TextInputGroup({ \r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n    \r\n}) {\r\n    return (\r\n            <div className=\"form-group\">\r\n                           <label htmlFor={name}> {label} </label>\r\n                           <input \r\n                           type={type}\r\n                           name={name} \r\n                           value={value}\r\n                           onChange={onChange}\r\n                           className=\r\n                           {classnames('form-control form-control-lg',\r\n                           {\r\n                               'is-invalid': error \r\n                           })}\r\n                           placeholder={placeholder}\r\n                           />\r\n                          {error && <div className=\"invalid-feedback\">\r\n                               {error}\r\n                           </div>} \r\n                           \r\n                       </div>\r\n    )\r\n}\r\n\r\n// TextInputGroup.PropTypes = {\r\n//     name: PropTypes.string.isRequired,\r\n//     placeholder: PropTypes.string.isRequired,\r\n//     value: PropTypes.string.isRequired,\r\n//     type: PropTypes.string.isRequired,\r\n//     onChange: PropTypes.func.isRequired,\r\n//     label: PropTypes.string.isRequired,\r\n//     error: PropTypes.string\r\n// };\r\n\r\n// TextInputGroup.defaultProps = {\r\n//     type: 'text'\r\n// };\r\n\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport { Consumer } from \"../../context\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors:{}\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone} = this.state;\r\n\r\n        //Check for Errors\r\n        if(name === '') {\r\n            this.setState({errors: { name: 'Name is required'\r\n            }});\r\n            return;\r\n        }\r\n\r\n        if(email === '') {\r\n            this.setState({errors: { email: 'Email is required'\r\n            }})\r\n            return;\r\n        }\r\n\r\n        if(phone === '') {\r\n            this.setState({errors: { phone: 'Phone is required'\r\n            }})\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios\r\n        .post('https://jsonplaceholder.typicode.com/users',newContact);\r\n        \r\n        dispatch\r\n            ({type: 'ADD_CONTACT', payload: res.data });\r\n      \r\n\r\n        \r\n\r\n        //Clear state\r\n        this.setState({\r\n            name: '',\r\n            email:'',\r\n            phone:'',\r\n            errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n    };\r\n\r\n\r\n    handleChange = e => this.setState({ [e.target.name]: \r\n        e.target.value });\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n        \r\n        return (\r\n            <Consumer>\r\n              {value => {\r\n                  const { dispatch } = value;\r\n                  return(\r\n                    <div className=\"card mb-3\">\r\n                <div className=\"card-header\">\r\n                   Add Contact\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                   <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                      <TextInputGroup \r\n                       label=\"Name\"\r\n                       name=\"name\"\r\n                       placeholder=\"Enter Name\"\r\n                       value={name}\r\n                       onChange={this.handleChange}\r\n                       error={errors.name}\r\n                       \r\n                      />\r\n\r\n                    <TextInputGroup \r\n                       label=\"Email\"\r\n                       name=\"email\"\r\n                       type=\"type\"\r\n                       placeholder=\"Enter Email\"\r\n                       value={email}\r\n                       onChange={this.handleChange}\r\n                       error={errors.email}\r\n                      />\r\n\r\n                    <TextInputGroup \r\n                       label=\"Phone\"\r\n                       name=\"phone\"\r\n                       placeholder=\"Enter Phone\"\r\n                       value={phone}\r\n                       onChange={this.handleChange}\r\n                       error={errors.phone}\r\n                      />\r\n\r\n                       <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-dark btn-block\" />\r\n                   </form>\r\n                </div>\r\n            </div>\r\n                  )\r\n              }}\r\n\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddContact;","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"> About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404 </span> Page Not Found </h1>\r\n            <p className=\"lead\"> Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'; \r\n\r\nclass test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n        }));\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     console.log('componentWillMount...');\r\n    // }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        const { title, body } = this.state;\r\n        return (\r\n        \r\n            <div>\r\n                <h1> {title} </h1> \r\n                 <p> {body} </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default test;","import React, { Component } from 'react'\r\nimport { Consumer } from \"../../context\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors:{}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get\r\n        (`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone} = this.state;\r\n\r\n        //Check for Errors\r\n        if(name === '') {\r\n            this.setState({errors: { name: 'Name is required'\r\n            }});\r\n            return;\r\n        }\r\n\r\n        if(email === '') {\r\n            this.setState({errors: { email: 'Email is required'\r\n            }})\r\n            return;\r\n        }\r\n\r\n        if(phone === '') {\r\n            this.setState({errors: { phone: 'Phone is required'\r\n            }})\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({\r\n            type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n    \r\n        //Clear state\r\n        this.setState({\r\n            name: '',\r\n            email:'',\r\n            phone:'',\r\n            errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n    };\r\n\r\n\r\n\r\n    handleChange = e => this.setState({ [e.target.name]: \r\n        e.target.value });\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n        \r\n        return (\r\n            <Consumer>\r\n              {value => {\r\n                  const { dispatch } = value;\r\n                  return(\r\n                    <div className=\"card mb-3\">\r\n                <div className=\"card-header\">\r\n                   Edit Contact\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                   <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                      <TextInputGroup \r\n                       label=\"Name\"\r\n                       name=\"name\"\r\n                       placeholder=\"Enter Name\"\r\n                       value={name}\r\n                       onChange={this.handleChange}\r\n                       error={errors.name}\r\n                       \r\n                      />\r\n\r\n                    <TextInputGroup \r\n                       label=\"Email\"\r\n                       name=\"email\"\r\n                       type=\"type\"\r\n                       placeholder=\"Enter Email\"\r\n                       value={email}\r\n                       onChange={this.handleChange}\r\n                       error={errors.email}\r\n                      />\r\n\r\n                    <TextInputGroup \r\n                       label=\"Phone\"\r\n                       name=\"phone\"\r\n                       placeholder=\"Enter Phone\"\r\n                       value={phone}\r\n                       onChange={this.handleChange}\r\n                       error={errors.phone}\r\n                      />\r\n\r\n                       <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-dark btn-block\" />\r\n                   </form>\r\n                </div>\r\n            </div>\r\n                  )\r\n              }}\r\n\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default EditContact;","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport test from './components/test/test';\nimport EditContact from \"./components/contacts/EditContact\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\"/>\n          <div className=\"container\">\n            <Switch>\n            <Route exact path=\"/\" component={Contacts}>\n            </Route>\n            <Route exact path=\"/about\" component={About}>\n              </Route>\n              <Route exact path=\"/contact/add\" component={AddContact}>\n              </Route>\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}>\n              </Route>\n              <Route exact path=\"/test\" component={test}>\n              </Route>\n              <Route component={NotFound} ></Route>\n            </Switch>\n          </div>\n         </div>\n        </Router>\n      </Provider>\n   \n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}